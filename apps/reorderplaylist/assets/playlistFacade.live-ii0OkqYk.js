import{g as y,c as g}from"./youtubeAuth-0Hy4WrYm.js";async function p(n,e={},s={}){const{retry401:i=!0,retries:t=2,signal:a}=s;let o=0,l;for(;o<=t;){o++;const u=await y(["https://www.googleapis.com/auth/youtube"]),c=await fetch(`https://www.googleapis.com/youtube/v3${n}`,{...e,headers:{"Content-Type":"application/json",Authorization:`Bearer ${u}`,...e.headers||{}},signal:a});if(c.ok)return c.json();const r=c.status;let d="";try{const h=await c.text();d=JSON.parse(h)?.error?.errors?.[0]?.reason??""}catch{}if(r===401){if(i){g();continue}throw new Error("permission-denied")}if(r===403&&/quota/i.test(d))throw new Error("quota-exceeded");if(r===404||r===409||r===412)throw new Error("precondition-failed");if(r===429||r>=500&&r<600){l=new Error("transient-error");const h=Math.min(1e3*o,3e3);await new Promise(w=>setTimeout(w,h));continue}throw new Error("transient-error")}throw l??new Error("transient-error")}async function f(n){const s=(await p(`/playlists?part=snippet,status,contentDetails&id=${encodeURIComponent(n)}`)).items?.[0];if(!s)throw new Error("permission-denied");return{id:s.id,title:s.snippet?.title??"Playlist",privacyStatus:s.status?.privacyStatus??"private",itemCount:s.contentDetails?.itemCount??0}}async function v(){let n="";const e=[];do{const s=new URLSearchParams({part:"snippet,status,contentDetails",mine:"true",maxResults:"50"});n&&s.set("pageToken",n);const i=await p(`/playlists?${s.toString()}`);for(const t of i.items??[])e.push({id:t.id,title:t.snippet?.title??"Playlist",privacyStatus:t.status?.privacyStatus??"private",itemCount:t.contentDetails?.itemCount??0});n=i.nextPageToken??""}while(n);return e}async function m(n){let e="";const s=[];do{const i=new URLSearchParams({part:"snippet,contentDetails",maxResults:"50",playlistId:n});e&&i.set("pageToken",e);const t=await p(`/playlistItems?${i.toString()}`);for(const a of t.items??[]){const o=a.id,l=a.etag||null,u=a.contentDetails?.videoId,c=a.snippet?.title,r=a.snippet?.videoOwnerChannelTitle||"",d=a.snippet?.publishedAt;s.push({id:o,etag:l,videoId:u,title:c,channel:r,dateAdded:d})}e=t.nextPageToken??""}while(e);return s}const I={async listUserPlaylists(){return await y(["https://www.googleapis.com/auth/youtube"]),await v()},async loadPlaylist(n){const[e,s]=await Promise.all([f(n),m(n)]),i=s.map((t,a)=>({id:t.id,title:t.title,channel:t.channel,duration:null,dateAdded:t.dateAdded,dateUploaded:null,originalIndex:a}));return{playlist:{...e,itemCount:i.length},items:i}},async applyReorder(n,e){const s=await m(n),i=new Map(s.map(t=>[t.id,t]));if(e.length!==s.length||e.some(t=>!i.has(t)))throw new Error("precondition-failed");for(let t=0;t<e.length;t++){const a=e[t],o=i.get(a),l={id:o.id,snippet:{playlistId:n,position:t,resourceId:{kind:"youtube#video",videoId:o.videoId}}};await p("/playlistItems?part=snippet",{method:"PUT",body:JSON.stringify(l),headers:o.etag?{"If-Match":o.etag}:void 0})}return{success:!0,message:"Applied"}}};export{I as livePlaylistFacade};
